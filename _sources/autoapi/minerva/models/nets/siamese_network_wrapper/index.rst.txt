minerva.models.nets.siamese_network_wrapper
===========================================

.. py:module:: minerva.models.nets.siamese_network_wrapper


Classes
-------

.. autoapisummary::

   minerva.models.nets.siamese_network_wrapper.SiameseNetworkWrapper


Module Contents
---------------

.. py:class:: SiameseNetworkWrapper(backbone)

   Bases: :py:obj:`torch.nn.Module`


   A simple wrapper for a Siamese Network. The code was inspired by the tutorial in the Pytorch
   website https://github.com/pytorch/examples/blob/main/siamese_network/main.py. It passes the
   inputs (namely x1 and x2) through the same backbone, and concatenates the representations
   obtained.

   Initializes the wrapper.

   Parameters
   ----------
   backbone : nn.Module
       The backbone of the Siamese Network.


   .. py:attribute:: backbone


   .. py:method:: forward(x)

      Passes the inputs through the backbone and concatenates the representations.
      x must be a list or a tuple containing two inputs, namely x1 and x2.

      Parameters
      ----------
      x : Union[list, tuple]
          A list or a tuple containing the two inputs.

      Returns
      -------
      torch.Tensor
          The concatenated representations.



   .. py:method:: forward_once(x)

      Passes the input through the backbone and flattens the output.

      Parameters
      ----------
      x : torch.Tensor
          The input tensor.

      Returns
      -------
      torch.Tensor
          The output data from the forward pass through the backbone.



